# Where we will store index absorption and refraction
import numpy as np

class MaterialConstant(object):


    def __init__(self):
        # wavelength
        short_wavelength = np.load('ConstantNPY\wl.npy')
        long_wavelength = np.load('ConstantNPY\w_long.npy')
        full_wavelength = np.hstack([long_wavelength,short_wavelength]).transpose()
        lightspeed = 3*10 ** (10) # speed of light in vacuum
        self.set_constant(lightspeed,full_wavelength,short_wavelength,long_wavelength)


    def set_ligthspeed(self,lightspeed):
        self.set_constant(lightspeed)


    def set_wavelenght(self, full_wavelength, short_wavelength, long_wavelength):
        self.set_constant(full_wavelength)
        self.set_constant(short_wavelength)
        self.set_constant(long_wavelength)


    def set_constant(self, lightspeed, full_wavelength, short_wavelength, long_wavelength):
        self.full_wavelength = full_wavelength
        self.short_wavelenght = short_wavelength
        self.long_wavelenght = long_wavelength
        self.lightspeed = lightspeed
        # ==========================================================#
        #                      K108 CONSTANT                        #
        # ==========================================================#
        self.d_K108 = 0.3 # cm
        # index refraction k(w)
        self.short_n = np.load('ConstantNPY\ n_short.npy')
            #np.array\
            #([1.45875,1.45967,1.46056,1.4614,1.46224,1.46309,1.46391,1.46464,1.46543,1.46624,1.46718,1.4682,1.46935,1.47038,1.47135,1.47209,1.47271,1.47331,1.47393,1.47486,1.47617,1.47714,1.47795,1.47882,1.48007,1.48124,1.48166,1.48226,1.48249,1.48258,1.48218,1.48177,1.48182,1.48201,1.4824,1.48276,1.48326,1.48371,1.48422,1.48467,1.48516,1.48566,1.4861,1.48655,1.48695,1.48735,1.48771,1.48809,1.48844,1.48872,1.48913,1.48948,1.48987,1.49029,1.49068,1.49113,1.49154,1.49192,1.49232,1.49273,1.49312,1.49343,1.49376,1.49408,1.49443,1.49476,1.49512,1.49552,1.49599,1.49663,1.49782,1.50034,1.50504,1.51091,1.50894,1.49687,1.47822,1.47033,1.47411,1.47946,1.48165,1.48185,1.48217,1.48279,1.48292,1.483,1.4831,1.48334,1.48352,1.48375,1.48403,1.48429,1.48447,1.4847,1.48494,1.4851,1.48528,1.48546,1.48554,1.48567,1.48573,1.48582,1.48589,1.48605,1.48617,1.48629,1.48636,1.48641,1.48645,1.48644,1.48654,1.48661,1.4867,1.48682,1.48695,1.48704,1.48716,1.48728,1.48742,1.48749,1.48762,1.48776,1.48786,1.48799,1.48807,1.48821,1.48835,1.48846,1.48859,1.48862,1.48861,1.4886,1.48861,1.48859,1.48857,1.48863,1.48873,1.48886,1.48891,1.48902,1.48917,1.48931,1.4894,1.48939,1.48931,1.48929,1.48933,1.48936,1.4894,1.4894,1.48945,1.48951,1.48955,1.4896,1.48971,1.48977,1.48982,1.48984,1.48986,1.4899,1.48988,1.48994,1.48998,1.49005,1.4901,1.49013,1.49022,1.49025,1.49025,1.49025,1.49028,1.49028,1.49024,1.49026,1.49027,1.49031,1.49036,1.49037,1.49048,1.49053,1.49052,1.49056,1.49059,1.49053,1.49055,1.49061,1.4907,1.49064,1.4907,1.49072,1.4908,1.49087,1.49092,1.491,1.49106,1.49115,1.49117,1.49121,1.49125,1.49128,1.49133,1.49131,1.49137,1.49136,1.49141,1.49141,1.49141,1.49142,1.49145,1.49145,1.49147,1.49152,1.49156,1.49159,1.49165,1.49163,1.49164,1.49165,1.49168,1.49164,1.49165,1.49165,1.49166,1.49164,1.49165,1.49167,1.49169,1.49176,1.4918,1.49176,1.49178,1.49177,1.49178,1.49176,1.49177,1.4918,1.49181,1.49187,1.49184,1.49182,1.49183,1.49181,1.49181,1.49181,1.49182,1.49185,1.49186,1.49189,1.49187,1.49191,1.4919,1.49188,1.49188,1.49187,1.49188,1.49188,1.49189,1.49187,1.49191,1.4919,1.4919,1.4919,1.49191,1.49192,1.49192,1.49192,1.49188,1.4919,1.49194,1.49195,1.49198,1.49203,1.49205,1.49207,1.49213,1.49215,1.49218,1.49217,1.4922,1.49216,1.49216,1.49213,1.49211,1.49208,1.49206,1.49208,1.49207,1.49208,1.49209,1.49213,1.4921,1.49215,1.49217,1.49221,1.49224,1.49227,1.49227,1.49217,1.49214,1.49214,1.49206,1.49196,1.49194,1.492,1.49195,1.49194,1.49194,1.49205,1.49206,1.49206,1.49209,1.49208,1.4921,1.49211,1.49214,1.49216,1.49221,1.49223,1.49223,1.49224,1.49224,1.4922,1.49219,1.4922,1.4922,1.49224,1.49226,1.49225,1.49228,1.4923,1.49235,1.49235,1.49238,1.49236,1.49239,1.49238,1.49235,1.49237,1.49241,1.49246,1.49245,1.49246,1.49248,1.49249,1.49249,1.4925,1.49251,1.49249,1.49254,1.49251,1.49252,1.49253,1.49255,1.49257,1.49258,1.49258,1.49255,1.49254,1.49256,1.49257,1.49262,1.49262,1.49262,1.49262,1.49261,1.49261,1.49262,1.49261,1.49261,1.49258,1.49259,1.49255,1.49253,1.49248,1.49247,1.49248,1.49251,1.49252,1.49252,1.49247,1.49244,1.49245,1.49242,1.49243,1.4924,1.49242,1.49243,1.49243,1.49242,1.49241,1.49241,1.49242,1.4924,1.49238,1.49237,1.4924,1.49239,1.49235,1.49235,1.49238,1.49243,1.49243,1.49244,1.49248,1.49246,1.49242,1.49242,1.49248,1.4925,1.49254,1.49255,1.49259,1.49264,1.49264,1.49269,1.49274,1.49274,1.49278,1.49277,1.4928,1.49284,1.49289,1.49294,1.49302,1.49308,1.49312,1.49311,1.49307,1.4931,1.49315,1.49319,1.49319,1.49319,1.49323,1.49322,1.49319,1.49323,1.4932,1.4932,1.4932,1.4932,1.49316,1.49313,1.49314,1.49315,1.4931,1.49309,1.49305,1.49301,1.49297,1.49294,1.49291,1.49289,1.49285,1.4928,1.49271,1.49268,1.49265,1.49262,1.49256,1.49253,1.4925,1.49246,1.49241,1.49237,1.49239,1.49238,1.49235,1.49229,1.49229,1.49225,1.49226,1.49224,1.49225,1.49229,1.49229,1.49229,1.49234,1.49238,1.4924,1.49234,1.49225,1.49216,1.49202,1.49184,1.49173,1.49167,1.49157,1.49137,1.49118,1.49097,1.49077,1.49069,1.4906,1.49053,1.4905,1.49051,1.49056,1.49054,1.49056,1.49052,1.4905,1.49054,1.49059,1.49062,1.49062,1.49059,1.4905,1.49047,1.49046,1.49046,1.49047,1.49044,1.49045,1.49046,1.49044,1.49043,1.49041,1.49041,1.49042,1.49041,1.49038,1.4904,1.49045,1.49048,1.49049,1.49047,1.49037,1.49035,1.49039,1.49042,1.49041,1.4904,1.49033,1.49028,1.49032,1.49033,1.49028,1.49025,1.49029,1.49028,1.49024,1.49021,1.49022,1.49019,1.49016,1.49014,1.49013,1.49016,1.49013,1.49014,1.49011,1.49012,1.4901,1.49006,1.49008,1.49011,1.49015,1.49014,1.49013,1.49009,1.49007,1.4901,1.49006,1.49001,1.49,1.49003,1.48997,1.48989,1.48986,1.4899,1.4899,1.4899,1.48996,1.48997,1.48993,1.48987,1.4899,1.48988,1.48985,1.48981,1.4898,1.48982,1.48978,1.48978,1.48974,1.48967,1.4896,1.4896,1.48958,1.48954,1.48953,1.48954,1.48953,1.48951,1.48949,1.4895,1.48949,1.48942,1.4894,1.48939,1.48936,1.48932,1.48927,1.48925,1.48921,1.48914,1.4891,1.48915,1.48916,1.48909,1.48903,1.48903,1.48907,1.489,1.48895,1.489,1.48904,1.48898,1.48895,1.48897,1.489,1.48899,1.48898,1.48903,1.48908,1.48907,1.48905,1.48905,1.48901,1.48898,1.48889,1.48891,1.48891,1.4889,1.48893,1.48888,1.48882,1.48884,1.48883,1.48885,1.48885,1.48879,1.48875,1.48877,1.48881,1.48881,1.48878,1.48872,1.48871,1.48872,1.48869,1.48869,1.48863,1.48862,1.48859,1.4886,1.48855,1.48854,1.4886,1.48859,1.4886,1.48855,1.48854,1.48848,1.48845,1.4884,1.48842,1.48839,1.48833,1.4883,1.4882,1.48813,1.48813,1.48813,1.48804,1.488,1.48802,1.48803,1.48793,1.48787,1.48779,1.48778,1.48777,1.48781,1.48784,1.48785,1.48783,1.48783,1.4879,1.48794,1.48799,1.48809,1.48818,1.48827,1.48836,1.48845,1.48852,1.4886,1.48868,1.48876,1.48883,1.4889,1.48894,1.48895,1.48894,1.48896,1.48896,1.48896,1.48897,1.48899,1.48901,1.48897,1.48897,1.48892,1.48891,1.48889,1.48888,1.48897,1.48898,1.48888,1.48886,1.4889,1.4889,1.48893,1.48892,1.48881,1.48873,1.48878,1.48881,1.48875,1.48874,1.48877,1.48877,1.48882,1.48885,1.48877,1.48873,1.48872,1.48873,1.48873,1.48871,1.48875,1.48879,1.48878,1.48876,1.48875,1.48879,1.48882,1.48883,1.48877,1.48875,1.48876,1.48874,1.48874,1.4887,1.4887,1.48868,1.48869,1.48871,1.48865,1.48861,1.48864,1.48866,1.48869,1.48869,1.48865,1.48865,1.48866,1.48866,1.48867,1.48862,1.48862,1.48862,1.48864,1.48869,1.48866,1.48866,1.48866,1.48868,1.48868,1.48863,1.48861,1.48857,1.48856,1.48856,1.4886,1.48865,1.48864,1.48863,1.48863,1.48863,1.4886,1.48859,1.48859,1.48853,1.48854,1.48857,1.4886,1.48855,1.48855,1.48855,1.48852,1.48854,1.48857,1.48853,1.48853,1.48858,1.48858,1.48857,1.48855,1.48853,1.48855,1.48853,1.48846,1.48847,1.4885,1.48848,1.48849,1.4885,1.48845,1.48846,1.48843,1.48844,1.48846,1.48839,1.48834,1.48833,1.48842,1.48838,1.48833,1.48828,1.4883,1.48828,1.48829,1.48831,1.4883,1.48831,1.48827,1.48827,1.48828,1.48825,1.48825,1.48825,1.48819,1.48819,1.48816,1.48819,1.48825,1.48821,1.48812,1.48804,1.48812,1.48817,1.48814,1.48815,1.48812,1.48812,1.48804,1.48801,1.48799,1.48798,1.48797,1.48793,1.48795,1.48793,1.48793,1.48788,1.48783,1.48784,1.48787,1.48786,1.48783,1.48778,1.48775,1.48778,1.4878,1.48783,1.48783,1.48782,1.48783,1.48789,1.4879,1.48791,1.48794,1.48793,1.48799,1.48806,1.48806,1.4881,1.48814,1.48819,1.48826,1.48834,1.48839,1.48841,1.48845,1.48851,1.48856,1.48855,1.48859,1.48863,1.48868,1.48875,1.48881,1.48882,1.48885,1.48883,1.48886,1.48887,1.48892,1.48892,1.48893,1.489,1.48902,1.489,1.48899,1.48901,1.48902,1.48897,1.48897,1.48902,1.48902,1.489,1.48897,1.48892,1.48893,1.48897,1.48896,1.48894,1.48892,1.48886,1.48886,1.48886,1.48883,1.48887,1.48892,1.48892,1.48891,1.48889,1.48892,1.4889,1.48887,1.48885,1.48884,1.48886,1.48891,1.48891,1.4889,1.4889,1.48886,1.48887,1.48888,1.4889,1.48892,1.48894,1.48895,1.48895,1.48894,1.48888,1.48885,1.48885,1.48889,1.48888,1.48891,1.48891,1.48889,1.48883,1.48883,1.48884,1.48888,1.48887,1.48889,1.48889,1.48886,1.48885,1.48882,1.48883,1.48884,1.48886,1.48886,1.48889,1.48888,1.48886,1.48884,1.48879,1.48881,1.48884,1.48888,1.48892,1.48891,1.48892,1.48887,1.4888,1.48881,1.48881,1.48882,1.48881,1.48881,1.48881,1.48881,1.48886,1.48888,1.48886,1.48884,1.48881,1.48884,1.48891,1.48888,1.48885,1.48885,1.48889,1.48891,1.48894,1.48897,1.48899,1.489,1.48905,1.48904,1.48902,1.48905,1.48907,1.48907,1.48909,1.48909,1.48915,1.48918,1.48926,1.48927,1.4893,1.4893,1.48931,1.48937,1.4894,1.48948,1.48951,1.48951,1.48949,1.48947,1.48959,1.48964,1.48957,1.48955,1.48954,1.48955,1.4896,1.48961,1.48964,1.48966,1.4897,1.48973,1.48974,1.48974,1.48976,1.48976,1.48979,1.48977,1.4898,1.48983,1.48984,1.48984,1.4898,1.4898,1.4898,1.48979,1.48979,1.4898,1.4898,1.48981,1.4898,1.48978,1.48983,1.48991,1.48991,1.48979,1.4898,1.48986,1.48989,1.48989,1.48988,1.48983,1.48984,1.48988,1.48991,1.48992,1.48989,1.48991,1.48993,1.48994,1.48994,1.48991,1.48985,1.48987,1.48989,1.48994,1.48997,1.48993,1.48994,1.49002,1.49007,1.48998,1.48994,1.48995,1.48998,1.49003,1.49005,1.49003,1.48999,1.48995,1.48993,1.49,1.49007,1.49007,1.49004,1.49003,1.49002,1.49006,1.49013,1.49012,1.4901,1.49015,1.49021,1.49023,1.49022,1.49022,1.49022,1.49026,1.49031,1.49032,1.49029,1.49029,1.49029,1.49029,1.49029,1.49029,1.49029,1.49032,1.49037,1.4904,1.4904,1.4904,1.49039,1.4904,1.49041,1.49044,1.49048,1.49049,1.49047,1.4904,1.49036,1.49034,1.49035,1.49038,1.49045,1.4905,1.49051,1.49051,1.49049,1.49048,1.49048,1.49048,1.49049,1.4905,1.4905,1.49053,1.49059,1.49064,1.49067,1.49066,1.49062,1.49057,1.49056,1.49057,1.4906,1.49064,1.49067,1.49069,1.49069,1.49063,1.49063,1.49064,1.49066,1.4907,1.49074,1.49077,1.49076,1.49073,1.4907,1.49069,1.49069,1.49071,1.49076,1.49082,1.49084,1.49084,1.49083,1.49078,1.49077,1.49077,1.49076,1.49077,1.49073,1.49075,1.49077,1.4908,1.4908,1.49085,1.49087,1.49086,1.4908,1.49078,1.49078,1.49073,1.49075,1.4908,1.4908,1.49079,1.49078,1.49074,1.4907,1.49075,1.49079,1.4908,1.49076,1.49076,1.49077,1.49081,1.49085,1.49086,1.49082,1.49082,1.49081,1.49082,1.49079,1.49082,1.49084,1.49087,1.49088,1.49087,1.49085,1.49081,1.49081,1.49082,1.49083,1.49085,1.49089,1.49091,1.49093,1.49095,1.49097,1.491,1.49102,1.49103,1.49102,1.49101,1.491,1.49103,1.49105,1.49106,1.49108,1.49111,1.49113,1.49114,1.49112,1.49112,1.49115,1.4912,1.49127,1.49134,1.49143,1.49147,1.4915,1.49151,1.4915,1.4915,1.49152,1.49154,1.49156,1.49157,1.49156,1.49157,1.49161,1.49166,1.49178,1.49181,1.49175,1.49169,1.49167,1.49171,1.49182,1.49197,1.492,1.492,1.49199,1.49197,1.49195,1.49194,1.49195,1.49203,1.49208,1.49213,1.4921,1.49203,1.49199,1.49197,1.49204,1.49214,1.4922,1.49223,1.49224,1.4922,1.49221,1.49222,1.49224,1.49227,1.49231,1.49236,1.49237,1.49236,1.49233,1.49226,1.49228,1.49236,1.49243,1.49249,1.49249,1.4924,1.49237,1.49236,1.49237,1.49241,1.49241,1.49247,1.49253,1.49255,1.49259,1.4926,1.49256,1.49255,1.49252,1.49243,1.49241,1.49239,1.49243,1.49249,1.49251,1.49256,1.49255,1.49259,1.49261,1.49256,1.49256,1.49255,1.4926,1.4927,1.49274,1.49277,1.49278,1.49272,1.4927,1.49273,1.4928,1.49282,1.49287,1.49288,1.49288,1.49288,1.49285,1.49289,1.49294,1.49297,1.493,1.493,1.49296,1.49301,1.4931,1.4932,1.4933,1.49337,1.49338,1.4934,1.49341,1.49342,1.49341,1.49344,1.49346,1.49348,1.49346,1.49349,1.49348,1.49352,1.49356,1.49357,1.49363,1.49364,1.4937,1.49372,1.49378,1.4938,1.49386,1.49388,1.49394,1.49395,1.49395,1.49395,1.49399,1.49399,1.49398,1.49396,1.49392,1.49388,1.49385,1.49384,1.49385,1.49388,1.49387,1.49391,1.49397,1.49402,1.49401,1.49403,1.49396,1.49393,1.49387,1.49386,1.49383,1.49385,1.49383,1.49385,1.49384,1.49384,1.49389,1.49392,1.494,1.49405,1.49408,1.49415,1.49417,1.49418,1.49422])
       # self.short_n = self.short_n[::10]
        self.long_n = np.load('ConstantNPY\ n_long.npy')
            #np.array([2.43601,2.43286,2.42859,2.42364,2.41876,2.41446,2.41124,2.40877,2.40678,2.40795,2.41055,2.41478,2.42061,2.42803,2.43686,2.44695,2.458,2.46969,2.48189,2.49445,2.50711,2.51968,2.53195,2.54381,2.55502,2.56557,2.57534,2.58427,2.59242,2.5997,2.60621,2.61197,2.61699,2.62134,2.62514,2.6283,2.63103,2.63333,2.63517,2.63662,2.63777,2.63857,2.63909,2.63943,2.6395,2.6394,2.63905,2.63853,2.63792,2.63715,2.63623,2.63515,2.634,2.63271,2.63122,2.62967,2.62793,2.62608,2.62406,2.62195,2.61969,2.61735,2.61487,2.61234,2.60983,2.60721,2.60457,2.60197,2.59943,2.59689,2.59441,2.59209,2.58977,2.58755,2.58541,2.58337,2.58136,2.57946,2.57759,2.57576,2.57404,2.5723,2.5706,2.56895,2.56728,2.56566,2.5641,2.56259,2.56107,2.5596,2.5582,2.55686,2.55551,2.55422,2.55293,2.5517,2.55046,2.54922,2.54805,2.54687,2.54569,2.54451,2.54332,2.54213,2.54101,2.53989,2.53883,2.53785,2.53686,2.53595,2.53517,2.5344,2.53376,2.53327,2.53278,2.53243,2.53222,2.53201,2.53194,2.53187,2.53194,2.53201,2.53208,2.53222,2.53237,2.53252,2.53272,2.53279,2.53294,2.53301,2.53306,2.53305,2.53296,2.53283,2.53261,2.53236,2.53201,2.53167,2.5311,2.53057,2.52993,2.52925,2.52834,2.52777,2.52659,2.52587,2.52434,2.52349,2.52263,2.52177,2.52084,2.51984,2.51884,2.51776])
        self.n_K108 = np.hstack([self.long_n,self.short_n])
        self.n_K108.transpose()
        # index absorption n(w)
        self.short_k = np.load('ConstantNPY\ k_short.npy')
            #np.array([7.65353,7.44166,7.23331,7.03479,6.85351,6.6967,6.56944,6.47651,6.42717,6.43092,6.50397,6.65513,6.87213,7.10117,7.25649,7.27139,7.1549,6.97062,6.78601,6.61731,6.43892,6.23086,6.00924,5.78127,5.56615,5.39002,5.24422,5.12504,4.97743,4.85203,4.7398,4.64009,4.55458,4.47963,4.41276,4.3524,4.29887,4.25007,4.20712,4.16702,4.13046,4.09588,4.06292,4.03195,4.00251,3.97461,3.9484,3.92448,3.90434,3.88878,3.87756,3.87161,3.87322,3.88186,3.89808,3.9231,3.95567,3.99707,4.04651,4.103,4.1654,4.23486,4.30985,4.39307,4.48381,4.5844,4.69417,4.80812,4.92022,5.01521,5.06035,4.97376,4.63148,3.92658,2.84816,1.87568,1.10738,0.70152,0.55223,0.49471,0.4555,0.42279,0.40178,0.38918,0.3747,0.36396,0.35461,0.34707,0.3388,0.33179,0.32549,0.31953,0.31319,0.30799,0.30299,0.29704,0.29136,0.28525,0.27784,0.27045,0.26242,0.25463,0.24729,0.24048,0.23378,0.2271,0.2199,0.21254,0.20501,0.19801,0.19179,0.18634,0.18206,0.17881,0.17609,0.17408,0.17281,0.17221,0.17172,0.17147,0.17203,0.17256,0.17327,0.17418,0.17517,0.17574,0.1763,0.17602,0.17443,0.17115,0.16637,0.16064,0.15464,0.1483,0.1424,0.138,0.13515,0.13306,0.13167,0.13087,0.1301,0.12916,0.12715,0.1235,0.11862,0.11391,0.10935,0.10479,0.10031,0.09584,0.09192,0.08866,0.08578,0.08342,0.08164,0.07993,0.07856,0.07733,0.07606,0.07507,0.07384,0.07306,0.072,0.07094,0.06995,0.06886,0.06791,0.06685,0.06586,0.06495,0.0643,0.06331,0.06236,0.06212,0.06127,0.06022,0.05984,0.05855,0.05828,0.05743,0.05685,0.05638,0.05617,0.05499,0.05478,0.05404,0.0541,0.05295,0.05258,0.05143,0.05088,0.05068,0.04977,0.04926,0.04848,0.048,0.04736,0.04685,0.04628,0.04564,0.04533,0.04459,0.04435,0.04367,0.0433,0.04283,0.04242,0.04205,0.04188,0.04134,0.04117,0.0407,0.04023,0.04006,0.03979,0.03908,0.03878,0.03844,0.0383,0.03776,0.03739,0.03699,0.03662,0.03638,0.03608,0.03577,0.03554,0.03537,0.03533,0.03493,0.03463,0.03449,0.03416,0.03395,0.03358,0.03348,0.03304,0.03321,0.03291,0.03274,0.03277,0.03257,0.03261,0.03264,0.03223,0.03207,0.0322,0.03203,0.03186,0.0318,0.03173,0.03146,0.03146,0.03133,0.03146,0.03146,0.03163,0.03139,0.03139,0.03122,0.03126,0.03119,0.03139,0.03146,0.03143,0.03143,0.03153,0.03166,0.03163,0.03176,0.03166,0.03176,0.03197,0.03217,0.0323,0.03261,0.03287,0.03328,0.03355,0.03365,0.03405,0.03466,0.035,0.0356,0.03625,0.03702,0.03786,0.03891,0.0404,0.04182,0.04337,0.04533,0.04702,0.04838,0.0496,0.04994,0.04953,0.04746,0.04523,0.0429,0.04006,0.03709,0.03493,0.03375,0.03277,0.03173,0.03119,0.0319,0.03203,0.03203,0.03234,0.0318,0.03156,0.03116,0.03102,0.03133,0.03139,0.03156,0.03159,0.03166,0.03163,0.03166,0.03159,0.03166,0.03176,0.03173,0.0319,0.0318,0.03166,0.03183,0.0319,0.03197,0.03183,0.03203,0.03193,0.0318,0.03149,0.03166,0.0321,0.03227,0.03213,0.03223,0.03244,0.03254,0.0325,0.03261,0.03281,0.03298,0.03308,0.03325,0.03331,0.03345,0.03368,0.03385,0.03402,0.03399,0.03368,0.03358,0.03375,0.03392,0.03399,0.03402,0.03402,0.03399,0.03385,0.03382,0.03402,0.03429,0.03436,0.03446,0.03456,0.03459,0.03442,0.03429,0.03426,0.03436,0.03459,0.0348,0.03476,0.03473,0.03486,0.03496,0.03507,0.03513,0.03534,0.03554,0.03564,0.03567,0.03557,0.03547,0.03547,0.03554,0.03574,0.03601,0.03641,0.03679,0.03662,0.03618,0.03621,0.03652,0.03658,0.03658,0.03675,0.03709,0.03695,0.03645,0.03652,0.03709,0.03736,0.03736,0.03739,0.03739,0.03746,0.03753,0.03759,0.03763,0.03766,0.03756,0.03749,0.03739,0.03736,0.03739,0.03753,0.03786,0.03803,0.03803,0.0379,0.03749,0.03733,0.03786,0.03834,0.0384,0.03837,0.03827,0.03824,0.03834,0.03837,0.03847,0.03851,0.03851,0.03847,0.03851,0.03861,0.03874,0.03884,0.03881,0.03871,0.03874,0.03878,0.03881,0.03888,0.03908,0.03928,0.03928,0.03921,0.03925,0.03935,0.03949,0.03965,0.03986,0.04006,0.04016,0.04019,0.04019,0.04016,0.04036,0.04077,0.0409,0.04077,0.0407,0.0408,0.0409,0.04107,0.04117,0.04117,0.04121,0.04114,0.04127,0.04171,0.04188,0.04171,0.04165,0.04165,0.04195,0.04242,0.04354,0.0457,0.04743,0.04814,0.04834,0.048,0.0477,0.0477,0.0477,0.04736,0.04709,0.04719,0.04723,0.04706,0.04675,0.04631,0.04608,0.04652,0.04709,0.0474,0.04746,0.04706,0.04655,0.04624,0.04611,0.04614,0.04628,0.04641,0.04652,0.04665,0.04682,0.04672,0.04648,0.04648,0.04662,0.04648,0.04618,0.04638,0.04692,0.04726,0.04746,0.04719,0.04652,0.04638,0.04679,0.04712,0.0475,0.04733,0.04665,0.04652,0.04696,0.04712,0.04696,0.04709,0.0476,0.04794,0.04804,0.04814,0.04824,0.04838,0.04851,0.04875,0.04916,0.04946,0.0496,0.0497,0.04987,0.04997,0.04983,0.04983,0.05007,0.05041,0.05082,0.05115,0.05105,0.05105,0.05139,0.05173,0.05173,0.0517,0.05207,0.05241,0.05214,0.05177,0.05193,0.05234,0.05282,0.05336,0.05397,0.05461,0.05465,0.05441,0.05478,0.0555,0.05567,0.05563,0.05601,0.05668,0.05726,0.05774,0.05777,0.05746,0.05767,0.05814,0.05842,0.05848,0.05882,0.0594,0.05978,0.05998,0.06032,0.06086,0.06124,0.06144,0.06171,0.06209,0.06226,0.06222,0.06222,0.06246,0.0625,0.06215,0.06226,0.06321,0.06382,0.06352,0.06335,0.06389,0.06423,0.06399,0.06389,0.06447,0.06495,0.06471,0.06443,0.06467,0.06495,0.06484,0.06477,0.06532,0.06583,0.06576,0.06549,0.06552,0.06559,0.06518,0.06474,0.06491,0.06535,0.06576,0.06607,0.06607,0.0659,0.06607,0.06641,0.06661,0.06668,0.06648,0.06607,0.06624,0.06675,0.06675,0.06634,0.06617,0.0661,0.06617,0.06638,0.06634,0.06614,0.06607,0.0662,0.06627,0.06627,0.06658,0.06723,0.06767,0.06774,0.0677,0.06753,0.06733,0.06702,0.06695,0.06719,0.06733,0.06716,0.06678,0.06614,0.06583,0.06634,0.06682,0.06678,0.06685,0.06757,0.06811,0.06804,0.06777,0.06743,0.06726,0.06767,0.06818,0.06849,0.06862,0.06832,0.06787,0.06767,0.0676,0.0677,0.06784,0.06791,0.06794,0.06798,0.06798,0.06787,0.06774,0.06764,0.06764,0.06791,0.06821,0.06815,0.06784,0.06764,0.06743,0.06736,0.06736,0.0675,0.06781,0.06794,0.06798,0.06798,0.06798,0.06784,0.0676,0.06798,0.06893,0.06914,0.06849,0.06828,0.06873,0.0692,0.06954,0.06934,0.06821,0.0677,0.06828,0.06866,0.06845,0.06835,0.06866,0.06913,0.06975,0.07002,0.06961,0.06917,0.0691,0.06917,0.06924,0.06948,0.06995,0.07036,0.07023,0.07006,0.07043,0.07087,0.07115,0.07125,0.07111,0.07087,0.07104,0.07132,0.07132,0.07125,0.07132,0.07152,0.07173,0.0719,0.07166,0.07125,0.07156,0.07234,0.07261,0.07261,0.07265,0.07268,0.07275,0.07285,0.07289,0.07282,0.07278,0.07282,0.07306,0.07357,0.07381,0.07374,0.07377,0.07395,0.07398,0.07395,0.07371,0.07323,0.07316,0.0736,0.07408,0.07466,0.07504,0.07494,0.07487,0.07494,0.075,0.07497,0.0749,0.0748,0.07483,0.07524,0.07555,0.07552,0.07541,0.07545,0.07558,0.07589,0.07613,0.07617,0.07623,0.07675,0.07726,0.07716,0.07695,0.07719,0.07743,0.07719,0.07692,0.07702,0.07733,0.0776,0.07777,0.07781,0.07781,0.07787,0.07801,0.07818,0.07835,0.07804,0.07746,0.07787,0.07887,0.07893,0.07832,0.07825,0.07856,0.0788,0.0789,0.07914,0.07952,0.07965,0.07962,0.07965,0.07979,0.07993,0.07996,0.07993,0.07975,0.07972,0.07989,0.08023,0.08085,0.08095,0.07996,0.07955,0.08037,0.08102,0.08116,0.08119,0.08143,0.08143,0.08099,0.08064,0.08095,0.08129,0.08119,0.08116,0.08143,0.08174,0.08167,0.0816,0.08157,0.08164,0.08201,0.08239,0.08205,0.08153,0.08164,0.08194,0.08225,0.08249,0.08249,0.08239,0.08253,0.08277,0.08287,0.0829,0.08283,0.08273,0.08287,0.08314,0.08321,0.08307,0.08307,0.08318,0.08345,0.08386,0.08393,0.08369,0.08366,0.08383,0.08386,0.08379,0.08372,0.08369,0.08383,0.0841,0.08427,0.08438,0.08424,0.08396,0.08379,0.08396,0.08403,0.084,0.0841,0.08444,0.08468,0.08444,0.08431,0.08451,0.08465,0.08458,0.08462,0.08516,0.08561,0.0854,0.0851,0.08506,0.08513,0.08554,0.08592,0.08575,0.08547,0.08537,0.0853,0.0853,0.08547,0.08595,0.08647,0.0865,0.08636,0.08664,0.08695,0.08677,0.08643,0.08619,0.08609,0.08633,0.08681,0.08691,0.08677,0.08677,0.08684,0.08691,0.08705,0.08722,0.08749,0.08767,0.0878,0.08784,0.0877,0.08753,0.08722,0.08722,0.0876,0.08797,0.08828,0.08832,0.08808,0.08794,0.08787,0.08801,0.08845,0.08883,0.08904,0.08904,0.08876,0.08859,0.08876,0.08894,0.08904,0.08924,0.08972,0.09007,0.08993,0.08972,0.08948,0.08945,0.08969,0.09003,0.09048,0.09089,0.0913,0.09144,0.09079,0.09007,0.0902,0.09065,0.09072,0.09069,0.09062,0.09062,0.0911,0.09172,0.09189,0.09175,0.09147,0.09117,0.09151,0.09223,0.09237,0.09213,0.09206,0.09209,0.0923,0.09264,0.09292,0.09312,0.09333,0.0934,0.0933,0.09299,0.09285,0.09305,0.09305,0.09281,0.09281,0.09302,0.09333,0.09374,0.09391,0.09374,0.09371,0.09381,0.09402,0.0944,0.09474,0.09508,0.09512,0.09443,0.09415,0.09505,0.09556,0.09481,0.09405,0.09402,0.09412,0.09415,0.09429,0.09457,0.09488,0.09529,0.0956,0.09574,0.09577,0.09591,0.09598,0.09577,0.09563,0.09591,0.09629,0.09639,0.09639,0.09646,0.09642,0.09639,0.09632,0.09632,0.09639,0.09646,0.09653,0.09639,0.09618,0.0967,0.09763,0.09759,0.09684,0.09691,0.09763,0.09794,0.09787,0.0978,0.0977,0.09783,0.09832,0.09863,0.09869,0.0989,0.09918,0.09938,0.09949,0.09942,0.09907,0.09897,0.09914,0.09945,0.1,0.10028,0.0999,0.09993,0.1009,0.10148,0.10093,0.10045,0.10062,0.10093,0.10141,0.10169,0.10145,0.10104,0.10055,0.10035,0.1011,0.1019,0.1019,0.10162,0.10145,0.10138,0.10176,0.10214,0.10197,0.10176,0.10228,0.10303,0.10321,0.1031,0.10307,0.10314,0.10359,0.10417,0.10421,0.10393,0.1039,0.10396,0.10396,0.1039,0.1039,0.10393,0.10427,0.10486,0.10514,0.10521,0.10517,0.10507,0.1051,0.10527,0.10559,0.10603,0.10621,0.10596,0.10565,0.10517,0.10493,0.10507,0.10545,0.10624,0.10679,0.1069,0.10686,0.10672,0.10659,0.10652,0.10652,0.10662,0.10676,0.10683,0.10707,0.10776,0.10838,0.10866,0.10862,0.1081,0.10755,0.10741,0.10755,0.1079,0.10831,0.10869,0.10893,0.1089,0.10879,0.10879,0.10886,0.10914,0.10955,0.10993,0.11028,0.11018,0.10987,0.10959,0.10938,0.10942,0.10966,0.11018,0.11087,0.11114,0.11107,0.11104,0.11097,0.11087,0.1108,0.11076,0.1108,0.1109,0.11104,0.11132,0.11166,0.11215,0.11273,0.11298,0.1128,0.11266,0.11246,0.11239,0.11239,0.11263,0.11318,0.1136,0.11356,0.11339,0.11301,0.11301,0.11356,0.11401,0.11415,0.11422,0.11419,0.11426,0.11477,0.11522,0.11533,0.1154,0.11533,0.11529,0.1154,0.11557,0.11585,0.11612,0.11637,0.1165,0.1164,0.11623,0.11623,0.11623,0.1163,0.11647,0.11675,0.11709,0.11737,0.11761,0.11785,0.1181,0.11834,0.11862,0.11869,0.11862,0.11848,0.11834,0.11827,0.11841,0.11858,0.11882,0.1191,0.11941,0.11945,0.11921,0.11924,0.11955,0.12011,0.12097,0.1217,0.12229,0.12274,0.12305,0.12319,0.12309,0.12305,0.12326,0.12347,0.12371,0.12385,0.12378,0.12389,0.12434,0.12493,0.12573,0.12607,0.12538,0.12472,0.12455,0.12489,0.12621,0.12739,0.12774,0.12778,0.1276,0.12736,0.12715,0.12705,0.12722,0.12757,0.12819,0.12871,0.12833,0.1276,0.12715,0.12694,0.12771,0.12885,0.12951,0.12986,0.13,0.12997,0.13007,0.13024,0.13045,0.13077,0.13122,0.13177,0.13195,0.13184,0.13153,0.13115,0.13143,0.13233,0.1331,0.13376,0.13383,0.13324,0.13289,0.13278,0.13292,0.13334,0.1339,0.13459,0.13529,0.13602,0.13644,0.13658,0.13658,0.13644,0.13613,0.13567,0.13543,0.13567,0.13609,0.13679,0.13748,0.13804,0.13853,0.13891,0.13916,0.13912,0.13909,0.13944,0.14006,0.14115,0.14219,0.14254,0.14258,0.14237,0.14216,0.14258,0.14331,0.14404,0.14467,0.14478,0.14471,0.14478,0.14495,0.14541,0.14596,0.14631,0.14656,0.14663,0.14666,0.14726,0.14824,0.14936,0.15058,0.15128,0.15149,0.15167,0.15174,0.15195,0.1523,0.15258,0.15289,0.15314,0.15342,0.15373,0.15412,0.15457,0.15507,0.15566,0.15626,0.15692,0.15762,0.15833,0.15906,0.1598,0.1605,0.16121,0.16184,0.16243,0.16296,0.16352,0.16398,0.16447,0.1649,0.16518,0.16518,0.16521,0.16539,0.16574,0.16637,0.16722,0.16813,0.16912,0.17028,0.17144,0.17236,0.17299,0.17328,0.17342,0.17377,0.17419,0.17483,0.17553,0.17631,0.17712,0.17804,0.17903,0.18016,0.1815,0.18292,0.18447,0.18589,0.1872,0.18844,0.18961,0.19064])
       #self.short_alfa = self.short_alfa[::10]
        self.long_k = np.load('ConstantNPY\ k_long.npy')
            #np.array([1.41723,1.42079,1.42546,1.43081,1.43606,1.44068,1.44414,1.44683,1.44898,1.46452,1.48454,1.50964,1.54008,1.57622,1.61798,1.66524,1.71724,1.773,1.83351,1.89857,1.96802,2.04153,2.11888,2.19975,2.28372,2.37063,2.4599,2.55131,2.64439,2.73909,2.83516,2.93225,3.0304,3.12958,3.22957,3.33079,3.43311,3.53673,3.6417,3.74835,3.85675,3.96731,4.07983,4.19479,4.31218,4.43198,4.55455,4.67991,4.80767,4.93842,5.07205,5.20819,5.34706,5.48856,5.63254,5.77885,5.92797,6.07923,6.23266,6.38846,6.54668,6.70683,6.86886,7.03341,7.1999,7.36838,7.5391,7.71239,7.8871,8.06478,8.2441,8.42604,8.61065,8.79775,8.98717,9.18033,9.37563,9.5736,9.77506,9.98097,10.1891,10.40158,10.61703,10.83645,11.05978,11.28822,11.51851,11.75513,11.99463,12.23824,12.48558,12.73841,12.9941,13.25437,13.51582,13.78324,14.05645,14.33125,14.60998,14.89169,15.1798,15.47377,15.76703,16.06938,16.37384,16.68587,16.99639,17.32014,17.64808,17.97789,18.31878,18.65711,19.01809,19.37147,19.72881,20.10765,20.48726,20.86235,21.25496,21.63272,22.05867,22.4606,22.86911,23.27964,23.68569,24.07805,24.52283,24.94517,25.32629,25.75683,26.2514,26.67743,27.16611,27.73894,28.18421,28.69821,29.3062,29.65773,30.49585,31.01018,31.6185,32.36288,33.32256,33.3233,34.67575,34.67666,36.98805,36.98912,36.99019,36.99125,36.9924,36.99363,36.99486,36.99618])
        self.k_K108 = np.hstack([self.long_k,self.short_k])
        self.k_K108.transpose()
        # ==========================================================#
        #                         VACUUM                            #
        # ==========================================================#
        self.n_vac = 1
        self.k_vac = 0
        # THIN MEMBRANE
        # ==========================================================#
        #                       THIN FILM                           #
        # ==========================================================#
        # 1
        self.T1_short = np.load('ConstantNPY\T1_short.npy')
        self.T1_long = np.load('ConstantNPY\T1_long.npy')
        self.T_exp_1 = np.hstack([[self.T1_long], [self.T1_short]])
        self.R1_short = np.load('ConstantNPY\R1_short.npy')
        self.R1_long = np.load('ConstantNPY\R1_long.npy')
        self.R_exp_1 = np.hstack([[self.R1_long], [self.R1_short]])
  #      np.savetxt('TRtext\T6_exp', self.T_exp_1.transpose)
 #       np.savetxt('TRtext\R6_exp', self.R_exp_1.transpose)

        # 2
        self.T2_short = np.load('ConstantNPY\T2_short.npy')
        self.T2_long = np.load('ConstantNPY\T2_long.npy')
        self.T_exp_2 = np.hstack([[self.T2_long], [self.T2_short]])
        self.R2_short = np.load('ConstantNPY\R2_short.npy')
        self.R2_long = np.load('ConstantNPY\R2_long.npy')
        self.R_exp_2 = np.hstack([[self.R2_long], [self.R2_short]])
#        np.savetxt('TRtext\T2_exp', self.T_exp_2.transpose)
#        np.savetxt('TRtext\R2_exp', self.R_exp_2.transpose)

        # 3
        self.T3_short = np.load('ConstantNPY\T3_short.npy')
        self.T3_long = np.load('ConstantNPY\T3_long.npy')
        self.T_exp_3 = np.hstack([[self.T3_long], [self.T3_short]])
        self.R3_short = np.load('ConstantNPY\R3_short.npy')
        self.R3_long = np.load('ConstantNPY\R3_long.npy')
        self.R_exp_3= np.hstack([[self.R3_long], [self.R3_short]])
#        np.savetxt('TRtext\T3_exp', self.T_exp_3.transpose)
#        np.savetxt('TRtext\R3_exp', self.R_exp_3.transpose)

        # 4
        self.T4_short = np.load('ConstantNPY\T4_short.npy')
        self.T4_long = np.load('ConstantNPY\T4_long.npy')
        self.T_exp_4 = np.hstack([[self.T4_long], [self.T4_short]])
        self.R4_short = np.load('ConstantNPY\R4_short.npy')
        self.R4_long = np.load('ConstantNPY\R4_long.npy')
        self.R_exp_4 = np.hstack([[self.R4_long], [self.R4_short]])
#        np.savetxt('TRtext\T4_exp', self.T_exp_4.transpose)
#        np.savetxt('TRtext\R4_exp', self.R_exp_4.transpose)

        # 5
        self.T5_short = np.load('ConstantNPY\T5_short.npy')
        self.T5_long = np.load('ConstantNPY\T5_long.npy')
        self.T_exp_5 = np.hstack([[self.T5_long], [self.T5_short]])
        self.R5_short = np.load('ConstantNPY\R5_short.npy')
        self.R5_long = np.load('ConstantNPY\R5_long.npy')
        self.R_exp_5 = np.hstack([[self.R5_long], [self.R5_short]])
        #np.savetxt('TRtext\T5_exp', self.T_exp_5.transpose)
        #np.savetxt('TRtext\R5_exp', self.R_exp_5.transpose)

        # 6
        self.T6_short = np.load('ConstantNPY\T6_short.npy')
        self.T6_long = np.load('ConstantNPY\T6_long.npy')
        self.T_exp_6 = np.hstack([[self.T6_long], [self.T6_short]])
        #np.savetxt('TRtext\T6_exp',self.T_exp_6.transpose)
        self.R6_short = np.load('ConstantNPY\R6_short.npy')
        self.R6_long = np.load('ConstantNPY\R6_long.npy')
        self.R_exp_6 = np.hstack([[self.R6_long], [self.R6_short]])
#        np.savetxt('TRtext\T6_exp', self.T_exp_6.transpose)
#       np.savetxt('TRtext\R6_exp', self.R_exp_6.transpose)
